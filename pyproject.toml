[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "chord-dht-viz"
version = "1.0.0"
description = "A comprehensive Chord DHT implementation with graph visualization"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Team Glitch", email = "team.glitch@example.com"},
]
maintainers = [
    {name = "Team Glitch", email = "team.glitch@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education", 
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: System :: Distributed Computing",
    "Topic :: System :: Networking",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8", 
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = [
    "chord",
    "dht",
    "distributed-hash-table", 
    "p2p",
    "peer-to-peer",
    "visualization",
    "graph",
    "network",
    "distributed-systems",
]
requires-python = ">=3.7"
dependencies = [
    "pydotplus>=2.0.2",
    "Pillow>=8.2.0",
    "pyfiglet>=0.8.post1", 
    "prometheus-client>=0.14.0",
    "rich>=13.0.0",
    "cryptography>=3.4.8",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
]
optional = [
    "networkx>=2.6",
    "matplotlib>=3.5.0",
]

[project.urls]
Homepage = "https://github.com/Akashbht/Chord-DHT-graphi-viz"
Documentation = "https://github.com/Akashbht/Chord-DHT-graphi-viz/blob/main/README.md"
Repository = "https://github.com/Akashbht/Chord-DHT-graphi-viz"
"Bug Tracker" = "https://github.com/Akashbht/Chord-DHT-graphi-viz/issues"

[project.scripts]
chord-dht = "Main:main"

[tool.setuptools]
packages = ["chord_dht_viz"]

[tool.setuptools.package-dir]
chord_dht_viz = "."

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["chord_dht_viz"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
minversion = "6.0"

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "examples/*", 
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true